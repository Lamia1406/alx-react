(self.webpackChunktask_1=self.webpackChunktask_1||[]).push([[344],{344:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>j});var r=t(540),o=t(72),a=t.n(o),i=t(825),s=t.n(i),l=t(659),c=t.n(l),A=t(56),p=t.n(A),d=t(159),u=t.n(d),m=t(113),f=t.n(m),g=t(602),h={};h.styleTagTransform=f(),h.setAttributes=p(),h.insert=c().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),a()(g.A,h),g.A&&g.A.locals&&g.A.locals;var b=t(556),C=t.n(b);const y=C().shape({id:C().number.isRequired,__html:C().string,type:C().string.isRequired,value:C().string}),E=t.p+"361ad9a0e632f77b39167e620f28d5e5.png";function x(e){var n=e.type,t=e.html,o=e.value;return t?r.createElement("li",{"data-notification-type":n,dangerouslySetInnerHTML:{__html:t}}):r.createElement("li",{"data-notification-type":n},o)}function v(e){var n=e.displayDrawer,t=e.listNotifications;return r.createElement("div",{style:{position:"absolute",right:"32px"}},r.createElement("div",{className:"menuItem"},r.createElement("p",null,"Your notifications")),n&&r.createElement("div",{className:"Notifications"},r.createElement("button",{style:{float:"right"},"aria-label":"Close",onClick:function(){return console.log("Close button has been clicked")}},r.createElement("img",{src:E,alt:"Close Icon"})),r.createElement("p",null,"Here is the list of notifications"),r.createElement("ul",null,0===t.length?r.createElement(x,{value:"No new notification for now"}):t.map((function(e){return r.createElement(x,{key:e.id,type:e.type,html:e.__html,value:e.value})})))))}x.propTypes={type:C().string.isRequired,html:C().shape({__html:C().string.isRequired}),value:C().string},x.defaultProps={type:"default",html:null,value:null},v.propTypes={displayDrawer:C().bool,listNotifications:C().arrayOf(y)},v.defaultProps={displayDrawer:!1,listNotifications:[]};var B=t(954),I={};I.styleTagTransform=f(),I.setAttributes=p(),I.insert=c().bind(null,"head"),I.domAPI=s(),I.insertStyleElement=u(),a()(B.A,I),B.A&&B.A.locals&&B.A.locals;const k=function(){return r.createElement("div",{className:"App-body"},r.createElement("p",null,"Login to access the full dashboard"),r.createElement("form",null,r.createElement("div",{className:"form-field"},r.createElement("label",{htmlFor:"email"},"Email:"),r.createElement("input",{type:"email",id:"email"})),r.createElement("div",{className:"form-field"},r.createElement("label",{htmlFor:"password"},"Password:"),r.createElement("input",{type:"password",id:"password"})),r.createElement("div",{className:"form-submit"},r.createElement("button",null,"OK"))))};var w=t(126),T={};T.styleTagTransform=f(),T.setAttributes=p(),T.insert=c().bind(null,"head"),T.domAPI=s(),T.insertStyleElement=u(),a()(w.A,T),w.A&&w.A.locals&&w.A.locals;const N=function(){return r.createElement("div",{className:"App-footer"},r.createElement("p",null,"Copyright 2024 - Holberton School"),r.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School"))},S=t.p+"24bab5d633e36ca8d17edc63164cf934.jpg";var M=t(646),R={};R.styleTagTransform=f(),R.setAttributes=p(),R.insert=c().bind(null,"head"),R.domAPI=s(),R.insertStyleElement=u(),a()(M.A,R),M.A&&M.A.locals&&M.A.locals;const L=function(){return r.createElement("div",{className:"App-header"},r.createElement("img",{src:S,alt:"Holberton Logo"}),r.createElement("h1",null,"School dashboard"))};var _=t(745),P={};function F(e){var n=e.isHeader,t=e.textFirstCell,o=e.textSecondCell;return r.createElement("tr",{style:{backgroundColor:"#f5f5f5ab"}},n?null===o?r.createElement("th",{colSpan:2,style:{backgroundColor:"#deb5b545"}},t):r.createElement(r.Fragment,null,r.createElement("th",null,t),r.createElement("th",null,o)):r.createElement(r.Fragment,null,r.createElement("td",null,t),r.createElement("td",null,o)))}P.styleTagTransform=f(),P.setAttributes=p(),P.insert=c().bind(null,"head"),P.domAPI=s(),P.insertStyleElement=u(),a()(_.A,P),_.A&&_.A.locals&&_.A.locals,F.propTypes={isHeader:C().bool,textFirstCell:C().string.isRequired,textSecondCell:C().oneOfType([C().string,C().number])},F.defaultProps={isHeader:!1,textSecondCell:null};var H=t(246),O={};O.styleTagTransform=f(),O.setAttributes=p(),O.insert=c().bind(null,"head"),O.domAPI=s(),O.insertStyleElement=u(),a()(H.A,O),H.A&&H.A.locals&&H.A.locals;const Y=C().shape({id:C().number.isRequired,name:C().string.isRequired,credit:C().number.isRequired});function U(e){var n=e.listCourses;return r.createElement("table",{id:"CourseList"},r.createElement("thead",null,r.createElement(F,{textFirstCell:"Available courses",isHeader:!0}),r.createElement(F,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),r.createElement("tbody",null,0===n.length?r.createElement(F,{textFirstCell:"No course available yet"}):n.map((function(e){return r.createElement(F,{key:e.id,textFirstCell:e.name,textSecondCell:e.credit})}))))}function j(e){var n=e.isLoggedIn;return r.createElement(r.Fragment,null,r.createElement(v,{displayDrawer:!0,listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",__html:"<strong>Urgent requirement</strong> - complete by EOD"}]}),r.createElement("div",{className:"App"},r.createElement(L,null),!0===n?r.createElement(U,{listCourses:[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}]}):r.createElement(k,null),r.createElement(N,null)))}U.propTypes={listCourses:C().arrayOf(Y)},U.defaultProps={listCourses:[]},j.propTypes={isLoggedIn:C().bool},j.defaultProps={isLoggedIn:!1}},745:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,"* {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    padding: 0 32px;\n}\n\n.App {\n    height: 100vh;\n    margin-top: 16px;\n}","",{version:3,sources:["webpack://./src/App/App.css"],names:[],mappings:"AAAA;IACI,yCAAyC;IACzC,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB",sourcesContent:["* {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    padding: 0 32px;\n}\n\n.App {\n    height: 100vh;\n    margin-top: 16px;\n}"],sourceRoot:""}]);const s=i},246:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,"#CourseList{\n    margin: 48px;\n    margin-bottom: 20%;\n    width: calc(100% - 48px * 2);\n    border: 1px solid gray; \n}\ntable#CourseList thead tr:nth-child(2){\n    text-align: left;\n}\n#CourseList thead th{\n    padding: 4px 0;\n    border-bottom: 2px solid rgb(209, 209, 209) ;\n   \n}\n","",{version:3,sources:["webpack://./src/CourseList/CourseList.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,kBAAkB;IAClB,4BAA4B;IAC5B,sBAAsB;AAC1B;AACA;IACI,gBAAgB;AACpB;AACA;IACI,cAAc;IACd,4CAA4C;;AAEhD",sourcesContent:["#CourseList{\n    margin: 48px;\n    margin-bottom: 20%;\n    width: calc(100% - 48px * 2);\n    border: 1px solid gray; \n}\ntable#CourseList thead tr:nth-child(2){\n    text-align: left;\n}\n#CourseList thead th{\n    padding: 4px 0;\n    border-bottom: 2px solid rgb(209, 209, 209) ;\n   \n}\n"],sourceRoot:""}]);const s=i},126:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,".App-footer{\n    border-top: 3px solid #E0354B;\n    height: 8%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .App-footer p{\n    font-style: italic;\n  }","",{version:3,sources:["webpack://./src/Footer/Footer.css"],names:[],mappings:"AAAA;IACI,6BAA6B;IAC7B,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;EACrB;EACA;IACE,kBAAkB;EACpB",sourcesContent:[".App-footer{\n    border-top: 3px solid #E0354B;\n    height: 8%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .App-footer p{\n    font-style: italic;\n  }"],sourceRoot:""}]);const s=i},646:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,".App-header {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-bottom: 3px solid #E0354B;\n  height: 35%;\n}\n\n.App-header img {\n    width: 200px;\n    height: auto;\n  }\n\n.App-header h1 {\n  font-size: 2rem;\n  color: #E0354B;\n}","",{version:3,sources:["webpack://./src/Header/Header.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,gCAAgC;EAChC,WAAW;AACb;;AAEA;IACI,YAAY;IACZ,YAAY;EACd;;AAEF;EACE,eAAe;EACf,cAAc;AAChB",sourcesContent:[".App-header {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-bottom: 3px solid #E0354B;\n  height: 35%;\n}\n\n.App-header img {\n    width: 200px;\n    height: auto;\n  }\n\n.App-header h1 {\n  font-size: 2rem;\n  color: #E0354B;\n}"],sourceRoot:""}]);const s=i},954:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,"  .App-body {\n      padding: 48px;\n      height: 57%;\n  }\n\n  .App-body form {\n      display: flex;\n      gap: 12px;\n      padding: 16px 0;\n  }\n\n  .App-body form .form-field {\n      display: flex;\n      gap: 12px;\n      align-items: center;\n\n  }\n\n\n  .App-body form .form-field input {\n      padding: 2px 8px;\n      border-radius: 0px;\n      border: 1px solid grey\n  }\n\n\n  .App-body form .form-submit button {\n      padding: 2px 8px;\n      border: 1px solid gray;\n      border-radius: 4px;\n      background-color: white;\n  }\n\n  .App-body form .form-submit button:hover {\n      background-color: gray;\n      color: white;\n\n      transition: ease-out 300ms;\n  }","",{version:3,sources:["webpack://./src/Login/Login.css"],names:[],mappings:"EAAE;MACI,aAAa;MACb,WAAW;EACf;;EAEA;MACI,aAAa;MACb,SAAS;MACT,eAAe;EACnB;;EAEA;MACI,aAAa;MACb,SAAS;MACT,mBAAmB;;EAEvB;;;EAGA;MACI,gBAAgB;MAChB,kBAAkB;MAClB;EACJ;;;EAGA;MACI,gBAAgB;MAChB,sBAAsB;MACtB,kBAAkB;MAClB,uBAAuB;EAC3B;;EAEA;MACI,sBAAsB;MACtB,YAAY;;MAEZ,0BAA0B;EAC9B",sourcesContent:["  .App-body {\n      padding: 48px;\n      height: 57%;\n  }\n\n  .App-body form {\n      display: flex;\n      gap: 12px;\n      padding: 16px 0;\n  }\n\n  .App-body form .form-field {\n      display: flex;\n      gap: 12px;\n      align-items: center;\n\n  }\n\n\n  .App-body form .form-field input {\n      padding: 2px 8px;\n      border-radius: 0px;\n      border: 1px solid grey\n  }\n\n\n  .App-body form .form-submit button {\n      padding: 2px 8px;\n      border: 1px solid gray;\n      border-radius: 4px;\n      background-color: white;\n  }\n\n  .App-body form .form-submit button:hover {\n      background-color: gray;\n      color: white;\n\n      transition: ease-out 300ms;\n  }"],sourceRoot:""}]);const s=i},602:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,".Notifications{\n    border: 2px dashed #E0354B;\n    padding: 24px 8px;\n    margin-top: 16px;\n}\n.menuItem{\n    text-align: right;\n}\n\n.Notifications button {\n    background-color: transparent;\n    border: none;\n}\n.Notifications button img{\n    width: 12px;\n    height: 12px;\n}\n.Notifications ul{\n    margin-left: 32px;\n    margin-top: 16px;\n    margin-right: 72px;\n}\n.Notifications ul li[data-notification-type='default'] {\n    color: blue;\n}\n.Notifications ul li[data-notification-type='urgent'] {\n    color: red;\n}","",{version:3,sources:["webpack://./src/Notifications/Notifications.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,iBAAiB;AACrB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;AAChB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,WAAW;AACf;AACA;IACI,UAAU;AACd",sourcesContent:[".Notifications{\n    border: 2px dashed #E0354B;\n    padding: 24px 8px;\n    margin-top: 16px;\n}\n.menuItem{\n    text-align: right;\n}\n\n.Notifications button {\n    background-color: transparent;\n    border: none;\n}\n.Notifications button img{\n    width: 12px;\n    height: 12px;\n}\n.Notifications ul{\n    margin-left: 32px;\n    margin-top: 16px;\n    margin-right: 72px;\n}\n.Notifications ul li[data-notification-type='default'] {\n    color: blue;\n}\n.Notifications ul li[data-notification-type='urgent'] {\n    color: red;\n}"],sourceRoot:""}]);const s=i},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},694:(e,n,t)=>{"use strict";var r=t(925);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,n,t,o,a,i){if(i!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function n(){return e}e.isRequired=e;var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:a,resetWarningCache:o};return t.PropTypes=t,t}},556:(e,n,t)=>{e.exports=t(694)()},925:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var l=e[s],c=r.base?l[0]+r.base:l[0],A=a[c]||0,p="".concat(c," ").concat(A);a[c]=A+1;var d=t(p),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)n[d].references++,n[d].updater(u);else{var m=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var l=r(e,o),c=0;c<a.length;c++){var A=t(a[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=l}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},159:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,