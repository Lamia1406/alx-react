"use strict";(self.webpackChunktask_1=self.webpackChunktask_1||[]).push([[593],{593:(n,e,t)=>{t.r(e),t.d(e,{default:()=>R});var o=t(540),r=t(72),a=t.n(r),i=t(825),s=t.n(i),A=t(659),l=t.n(A),c=t(56),p=t.n(c),d=t(159),u=t.n(d),m=t(113),f=t.n(m),g=t(602),b={};b.styleTagTransform=f(),b.setAttributes=p(),b.insert=l().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=u(),a()(g.A,b),g.A&&g.A.locals&&g.A.locals;const h=t.p+"361ad9a0e632f77b39167e620f28d5e5.png";function C(n){var e=n.type,t=n.html,o=n.value;return React.createElement("li",{"data-notification-type":e,dangerouslySetInnerHTML:t},o)}function E(){return o.createElement("div",{className:"Notifications"},o.createElement("button",{style:{float:"right"},"aria-label":"Close",onClick:function(){return console.log("Close button has been clicked")}},o.createElement("img",{src:h,alt:"Close Icon"})),o.createElement("p",null,"Here is the list of notifications"),o.createElement("ul",null,o.createElement(C,{type:"default",value:"New course available"}),o.createElement(C,{type:"urgent",value:"New resume available"}),o.createElement(C,{type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}})))}var y=t(954),v={};v.styleTagTransform=f(),v.setAttributes=p(),v.insert=l().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=u(),a()(y.A,v),y.A&&y.A.locals&&y.A.locals;const B=function(){return o.createElement("div",{className:"App-body"},o.createElement("p",null,"Login to access the full dashboard"),o.createElement("form",null,o.createElement("div",{className:"form-field"},o.createElement("label",{htmlFor:"email"},"Email:"),o.createElement("input",{type:"email",id:"email"})),o.createElement("div",{className:"form-field"},o.createElement("label",{htmlFor:"password"},"Password:"),o.createElement("input",{type:"password",id:"password"})),o.createElement("div",{className:"form-submit"},o.createElement("button",null,"OK"))))};var x=t(126),I={};I.styleTagTransform=f(),I.setAttributes=p(),I.insert=l().bind(null,"head"),I.domAPI=s(),I.insertStyleElement=u(),a()(x.A,I),x.A&&x.A.locals&&x.A.locals;const N=function(){return o.createElement("div",{className:"App-footer"},o.createElement("p",null,"Copyright 2024 - Holberton School"),o.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School"))},w=t.p+"24bab5d633e36ca8d17edc63164cf934.jpg";var M=t(646),k={};k.styleTagTransform=f(),k.setAttributes=p(),k.insert=l().bind(null,"head"),k.domAPI=s(),k.insertStyleElement=u(),a()(M.A,k),M.A&&M.A.locals&&M.A.locals;const S=function(){return o.createElement("div",{className:"App-header"},o.createElement("img",{src:w,alt:"Holberton Logo"}),o.createElement("h1",null,"School dashboard"))};var T=t(745),H={};function R(){return o.createElement(o.Fragment,null,o.createElement(E,null),o.createElement("div",{className:"App"},o.createElement(S,null),o.createElement(B,null),o.createElement(N,null)))}H.styleTagTransform=f(),H.setAttributes=p(),H.insert=l().bind(null,"head"),H.domAPI=s(),H.insertStyleElement=u(),a()(T.A,H),T.A&&T.A.locals&&T.A.locals},745:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,"* {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    padding: 0 32px;\n}\n\n.App {\n    height: 100vh;\n    margin-top: 16px;\n}","",{version:3,sources:["webpack://./src/App/App.css"],names:[],mappings:"AAAA;IACI,yCAAyC;IACzC,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB",sourcesContent:["* {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    padding: 0 32px;\n}\n\n.App {\n    height: 100vh;\n    margin-top: 16px;\n}"],sourceRoot:""}]);const s=i},126:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,".App-footer{\n    border-top: 3px solid #E0354B;\n    height: 8%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .App-footer p{\n    font-style: italic;\n  }","",{version:3,sources:["webpack://./src/Footer/Footer.css"],names:[],mappings:"AAAA;IACI,6BAA6B;IAC7B,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;EACrB;EACA;IACE,kBAAkB;EACpB",sourcesContent:[".App-footer{\n    border-top: 3px solid #E0354B;\n    height: 8%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .App-footer p{\n    font-style: italic;\n  }"],sourceRoot:""}]);const s=i},646:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,".App-header {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-bottom: 3px solid #E0354B;\n  height: 35%;\n}\n\n.App-header img {\n    width: 200px;\n    height: auto;\n  }\n\n.App-header h1 {\n  font-size: 2rem;\n  color: #E0354B;\n}","",{version:3,sources:["webpack://./src/Header/Header.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,gCAAgC;EAChC,WAAW;AACb;;AAEA;IACI,YAAY;IACZ,YAAY;EACd;;AAEF;EACE,eAAe;EACf,cAAc;AAChB",sourcesContent:[".App-header {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-bottom: 3px solid #E0354B;\n  height: 35%;\n}\n\n.App-header img {\n    width: 200px;\n    height: auto;\n  }\n\n.App-header h1 {\n  font-size: 2rem;\n  color: #E0354B;\n}"],sourceRoot:""}]);const s=i},954:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,"  .App-body {\n      padding: 48px;\n      height: 57%;\n  }\n\n  .App-body form {\n      display: flex;\n      gap: 12px;\n      padding: 16px 0;\n  }\n\n  .App-body form .form-field {\n      display: flex;\n      gap: 12px;\n      align-items: center;\n\n  }\n\n\n  .App-body form .form-field input {\n      padding: 2px 8px;\n      border-radius: 0px;\n      border: 1px solid grey\n  }\n\n\n  .App-body form .form-submit button {\n      padding: 2px 8px;\n      border: 1px solid gray;\n      border-radius: 4px;\n      background-color: white;\n  }\n\n  .App-body form .form-submit button:hover {\n      background-color: gray;\n      color: white;\n\n      transition: ease-out 300ms;\n  }","",{version:3,sources:["webpack://./src/Login/Login.css"],names:[],mappings:"EAAE;MACI,aAAa;MACb,WAAW;EACf;;EAEA;MACI,aAAa;MACb,SAAS;MACT,eAAe;EACnB;;EAEA;MACI,aAAa;MACb,SAAS;MACT,mBAAmB;;EAEvB;;;EAGA;MACI,gBAAgB;MAChB,kBAAkB;MAClB;EACJ;;;EAGA;MACI,gBAAgB;MAChB,sBAAsB;MACtB,kBAAkB;MAClB,uBAAuB;EAC3B;;EAEA;MACI,sBAAsB;MACtB,YAAY;;MAEZ,0BAA0B;EAC9B",sourcesContent:["  .App-body {\n      padding: 48px;\n      height: 57%;\n  }\n\n  .App-body form {\n      display: flex;\n      gap: 12px;\n      padding: 16px 0;\n  }\n\n  .App-body form .form-field {\n      display: flex;\n      gap: 12px;\n      align-items: center;\n\n  }\n\n\n  .App-body form .form-field input {\n      padding: 2px 8px;\n      border-radius: 0px;\n      border: 1px solid grey\n  }\n\n\n  .App-body form .form-submit button {\n      padding: 2px 8px;\n      border: 1px solid gray;\n      border-radius: 4px;\n      background-color: white;\n  }\n\n  .App-body form .form-submit button:hover {\n      background-color: gray;\n      color: white;\n\n      transition: ease-out 300ms;\n  }"],sourceRoot:""}]);const s=i},602:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,".Notifications{\n    border: 2px dashed #E0354B;\n    padding: 24px 8px;\n    margin-top: 16px;\n}\n.Notifications button {\n    background-color: transparent;\n    border: none;\n}\n.Notifications button img{\n    width: 12px;\n    height: 12px;\n}\n.Notifications ul{\n    margin-left: 32px;\n    margin-top: 16px;\n}\n.Notifications ul li[data='default'] {\n    color: blue;\n}\n.Notifications ul li[data='urgent'] {\n    color: red;\n}","",{version:3,sources:["webpack://./src/Notifications/Notifications.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,6BAA6B;IAC7B,YAAY;AAChB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,WAAW;AACf;AACA;IACI,UAAU;AACd",sourcesContent:[".Notifications{\n    border: 2px dashed #E0354B;\n    padding: 24px 8px;\n    margin-top: 16px;\n}\n.Notifications button {\n    background-color: transparent;\n    border: none;\n}\n.Notifications button img{\n    width: 12px;\n    height: 12px;\n}\n.Notifications ul{\n    margin-left: 32px;\n    margin-top: 16px;\n}\n.Notifications ul li[data='default'] {\n    color: blue;\n}\n.Notifications ul li[data='urgent'] {\n    color: red;\n}"],sourceRoot:""}]);const s=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],l=o.base?A[0]+o.base:A[0],c=a[l]||0,p="".concat(l," ").concat(c);a[l]=c+1;var d=t(p),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var m=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=o(n,r),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},159:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,